plugins {
    id 'signing'
}

apply plugin: 'maven-publish'
apply plugin: 'signing'

ext {
    githubRepo = "github.com/ProtonVPN/go-vpn-lib"
}

afterEvaluate {
    publishing {
        publications {
            govpn(MavenPublication) {
                groupId 'me.proton'
                artifactId 'go-vpn-lib'
                version '0.1.0'
                artifact("artifacts/govpn.aar")
                artifact("artifacts/govpn-sources.jar") { classifier = "sources" }
                artifact("govpn-javadoc.jar") { classifier = "javadoc" }
                signing {
                    def signingKey = findProperty("signingKey")
                    def signingPassword = findProperty("signingPassword")
                    useInMemoryPgpKeys(signingKey, signingPassword)
                    sign publishing.publications.govpn
                }
                pom {
                    name = "me.proton:go-vpn-lib"
                    description = "Go library with shared code for ProtonVPN clients"
                    url = "https://${githubRepo}"
                    licenses {
                        license {
                            name = "GNU GENERAL PUBLIC LICENSE, Version 3.0"
                            url = "https://www.gnu.org/licenses/gpl-3.0.en.html"
                        }
                    }
                    developers {
                        developer {
                            id = "opensource@proton.me"
                            name = "Open Source Proton"
                            email = "opensource@proton.me"
                        }
                    }
                    scm {
                       connection = "scm:git:git://${githubRepo}.git"
                       developerConnection = "scm:git:ssh://${githubRepo}.git"
                       url = "https://${githubRepo}"
                    }
                }
            }
        }
        repositories {
            def sonatypeUser = System.getenv("SONATYPE_USER")
            if (sonatypeUser != null) {
                maven {
                    url "https://s01.oss.sonatype.org/service/local/"
                    credentials {
                        username sonatypeUser
                        password System.getenv("SONATYPE_PASSWORD")
                    }
                }
            }
        }
    }
}